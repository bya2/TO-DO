1015

Redis - 데이터베이스 정보 조회

*레디스 정보 조회: (서버, 연결된 클라이언트들, 메모리, 영속성, 상태, 저장 및 백업, CPU, 클러스터, 키 스페이스)
$ info

- 레디스를 패키지로 설치했을 경우, 레디스의 환경 설정 파일(redis.conf)은 /root/redis-5.0.5/redis.conf에 위치.
- 도커의 경우, /etc/reids (없다면 find 명령으로 찾기)

*레디스 기본 구동 옵션:
    - deamonize: (디폴트, no, > Foregraound 구동) yes로 변경하면 백그라운드에서 실행.
    - port: (디폴트, 6379)
    - loglevel: (디폴트, verbose) 실무에서는 notice, warning으로 설정.
    - logfile: (디폴트, stdout) Foreground로 레디스가 실행되면, 콘솔에 log 출력. 백그라운드(deamonize: yes)로 전환해서 운영하게 되면, 파일로 내보내는 것이 좋음.
    - database: (디폴트, 0) (레디스 데이터베이스 = 네임스페이스) 하나의 서버에서 사용할 네임스페이스 개수를 지정하는 옵션. 16이면 0~16. 총 17개


*레디스 데이터의 지속성 (RDB 설정)
    - 레디스는 데이터를 디스크에 기록할 수 있음. (캐시로만 사용한다면 필요 없음. 지속성을 위해 디스크에 기록하면 지연시간 증가하기 때문)


*AOF 설정: --append-only yes
    - appendonly.conf 파일을 통해 입력되는 모든 키값이 디스크에 쓰기 명령으로 저장되어 기록을 유지
    - NoSQL 서버로, 데이터를 지속적으로 가지고 있기를 원한다면 redis.conf 파일에 appendonly yes 옵션을 추가


*Replication 설정:
    마스터 노드에서는 requirepass만 설정.
    아래 사항은 slave에서 설정.
    *slaveof: 마스터 노드의 네트워크 위치 지정. $ slaveof <master node's ip> <master node's port>
    *masterauth: 마스터 노드가 requirepass 설정에 의해서 패스워드로 보호되고 있을 때, 슬레이브 노드에서 설정하는 옵션. 마스터 노드의 requirepass 설정에 지정된 패스워드.
    *slave-serve-stale-data: 마스터 노드에 대한 네트워크 연결이 끊어지거나, 마스터 노드의 전체 데이터를 복제 중일 때, 슬레이브 노드로 들어오는 요청을 어떻게 처리하는 가에 대한 설정. (yes: 슬레이브 노드에서 읽거나 쓰기 요청을 모두 처리, no: 에러 메세지 전달)
    *slave-read-only: 슬레이브를 read-only로 운영. 쓰기 명령은 에러 발생. slaveof나 config와 같은 관리자 명령은 사용 가능.
    *repl-ping-slave-period: 슬레이브 노드에서 설정된 간격으로, 마스터 노드에 ping 명령을 수행. (기본 간격 10초)

*보안 설정:
    - 자체적인 보안은 좋지 않음. 따라서 방화벽 정책을 개선하거나 SSH 접속 정책을 제한.

    *rename-command: 레디스는 명령어의 이름을 변경할 수 있음. 레디스 전체를 삭제하는 명령어를 사용하지 못하게 막고 싶다면,
    $ rename-command FLUSHALL cz231masdm23adlasdmafsfww221

    *requirepass: 레디스 서버에 접속하기 위한 패스워드 설정. 클라이언트는 requirement에 설정한 값을 이용하여 인증한 후에 레디스 명령을 사용할 수 있음. slave가 복제를 요청할 때도 사용.


*제한 설정: 서버가 사용할 수 있는 최대 값들 설정 (주로 메모리 관한 설정)
    *maxclient: 레디스 인스턴스에 접속할 수 있는 클라이언트 수 지정. (디폴트, 1024) (최댓값, -1) (O/S의 ulimit 값과도 연관이 있기 때문에 ulimit 제한도 확인해서 변경해야함. /etc/limits.conf, /etc/security/limits.conf)
    *maxmemory: 레디스 인스턴스가 사용할 메모리 크기 지정. 이 값보다 많은 데이터 저장하려면 maxmemory-policy 설정에 지정된 값에 따라 레디스 동작이 달라짐.
    *maxmemory-policy: 레디스 인스턴스에 저장된 데이터가 maxmemory를 넘을 경우, 메모리 정리에 대한 정책.
    *maxmemory-samples: maxmemory-policy를 적용하기 위해, 레디스가 조회할 키의 개수 지정.


*Lua 설정: (eval 명령을 사용)
    - 레디스에서는 Lua script를 수행할 수 있는데, 레디스는 단일 스레드로 동작되기 때문에, Lua script가 돌아가는 동안, 다른 명령을 수행할 수 없게 되어(원자적), 다른 클라이언트의 응답시간이 증가하게 됨.
    - 따라서 Lua script에 대해서 설정할 수 있는 부분은 실행 시간을 제어하는 부분 뿐임.


*Slow query 설정:
    - 레디스의 데이터 처리는 Redis 명령어에 기반하므로, 레디스에서 쿼리는 데이터 처리 명령어와 같음.
    - Slow query는 느리게 수행되는 명령어.
    *쿼리 수행 시간: Redis 명령어가 인스턴스까지 도착 한 후 부터 명령을 처리한 결과를 돌려주기까지의 시간. 즉, 순수하게 데이터를 처리한 시간만을 나타냄.



