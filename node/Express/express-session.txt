1104

express: express-session

- genid: 'd: function which uses uid-safe library' - 새로운 세션 ID를 생성하기 위해 호출할 함수.
- name: 'd: connect-sid' - Res에 설정할 세션 ID 쿠키의 이름.
- proxy: 'd: undefined' - 서버가 프록시 뒤에 있으면 설정.
- resave: 'd: true' - 요청 중 세션이 수정되지 않았더라도, 세션을 세션 스토어에 저장할 지 여부.
- rolling: 'd: false' - 'true'로 설정하면, 
- saveUninitialized: 'd: true' - 초기화되지 않은 세션을 스토어에 저장할지 여부
- secret: 세션 ID 쿠키에 서명하는데 사용되는 암호. string or array. 배열은 첫번째 요소만. 나머지는 docs
- store: 세션 스토어 인스턴스. (외부 저장소 사용)
- unset: 'd: keep' - 설정되지 않은 req.session의 결과값 제어. ['destroy', 'keep']
  // destory: Response가 끝날 때 세션은 삭제됌.
  // keep: 저장소의 세션은 유지되지만, 요청 중에 수정한 내용은 무시되고 저장되지 않음.

- cookie: {
-- domain: 'd: x' - 하위 도메인을 제외한 도메인이 일치하는 경우에만 쿠키 설정.
-- expires
-- httpOnly: 'd: true' -
-- maxAge: 'd: null' -
-- path: 'd: /' - 주어진 경로의 하위 디렉토리에 있는 경우에만 쿠키 설정.
-- sameSite: 'd: lax' - 서로 다른 도메인간의 쿠키 전송에 대한 보안을 설정.
  // "Strict" : 서로 다른 도메인에서 아예 전송 불가능. 보안성은 높으나 편의가 낮다.
  // "Lax" : 서로 다른 도메인이지만 일부 예외( HTTP get method / a href / link href )에서는 전송 가능.
  // "None" : 모든 도메인에서 전송 가능
  // 좀더 자세히는 https://web.dev/samesite-cookies-explained/
-- secure 'd: false' - 주소가 "https"로 시작하는 경우에만 쿠키 생성.
}

cookie: {
  path:  Cookie 헤더를 전송하기 위하여 요청되는 URL 내에 반드시 존재해야 하는 URL 경로
  domain: 해당 도메인에 따라 제한.
  httpOnly: 자바스크립트 등에서 쿠키에 접근하는 것을 차단.
  maxAge: 
  sameSite: 
  secure: 
  expires: 만료 시간, maxAge 프로퍼티가 있으면 
}

genid
secret: Request 중 세션이 수정되지 않았더라도 세션 스토어에 다시 저장.
name: 'connect.sid'.
proxy: undefined.
resave


- req.session {
-- regenerate(callback)
-- destory(callback)
-- reload(callback)
-- save(callback)
-- touch(callback)
-- id
-- cookie {
--- maxAge
--- originalMaxAge
 }
}

- req.sessionID